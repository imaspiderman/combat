#include "GameTypes.h"
#ifndef __GameData_H
#define __GameData_H

/*********************
Cosine and Sine tables in degrees
multiplied by a factor of 8
Example to multiply 25 by cos(8) (degrees)
Take (25*cosine[8])>>3.
*********************/

const s32 cosine[360]={
	8,8,8,8,8,8,8,8,
	8,8,8,8,8,8,8,8,
	8,8,8,8,8,7,7,7,
	7,7,7,7,7,7,7,7,
	7,7,7,7,6,6,6,6,
	6,6,6,6,6,6,6,5,
	5,5,5,5,5,5,5,5,
	4,4,4,4,4,4,4,4,
	4,3,3,3,3,3,3,3,
	2,2,2,2,2,2,2,2,
	1,1,1,1,1,1,1,0,
	0,0,0,-0,-0,-0,-1,-1,
	-1,-1,-1,-1,-1,-2,-2,-2,
	-2,-2,-2,-2,-2,-3,-3,-3,
	-3,-3,-3,-3,-4,-4,-4,-4,
	-4,-4,-4,-4,-4,-5,-5,-5,
	-5,-5,-5,-5,-5,-5,-6,-6,
	-6,-6,-6,-6,-6,-6,-6,-6,
	-6,-7,-7,-7,-7,-7,-7,-7,
	-7,-7,-7,-7,-7,-7,-7,-7,
	-8,-8,-8,-8,-8,-8,-8,-8,
	-8,-8,-8,-8,-8,-8,-8,-8,
	-8,-8,-8,-8,-8,-8,-8,-8,
	-8,-8,-8,-8,-8,-8,-8,-8,
	-8,-8,-8,-8,-8,-8,-8,-8,
	-8,-7,-7,-7,-7,-7,-7,-7,
	-7,-7,-7,-7,-7,-7,-7,-7,
	-6,-6,-6,-6,-6,-6,-6,-6,
	-6,-6,-6,-5,-5,-5,-5,-5,
	-5,-5,-5,-5,-4,-4,-4,-4,
	-4,-4,-4,-4,-4,-3,-3,-3,
	-3,-3,-3,-3,-2,-2,-2,-2,
	-2,-2,-2,-2,-1,-1,-1,-1,
	-1,-1,-1,-0,-0,-0,-0,0,
	0,0,1,1,1,1,1,1,
	1,2,2,2,2,2,2,2,
	2,3,3,3,3,3,3,3,
	4,4,4,4,4,4,4,4,
	4,5,5,5,5,5,5,5,
	5,5,6,6,6,6,6,6,
	6,6,6,6,6,7,7,7,
	7,7,7,7,7,7,7,7,
	7,7,7,7,8,8,8,8,
	8,8,8,8,8,8,8,8,
	8,8,8,8,8,8,8,8
};
const s32 sine[360]={
	0,0,0,0,1,1,1,1,
	1,1,1,2,2,2,2,2,
	2,2,2,3,3,3,3,3,
	3,3,4,4,4,4,4,4,
	4,4,4,5,5,5,5,5,
	5,5,5,5,6,6,6,6,
	6,6,6,6,6,6,6,7,
	7,7,7,7,7,7,7,7,
	7,7,7,7,7,7,8,8,
	8,8,8,8,8,8,8,8,
	8,8,8,8,8,8,8,8,
	8,8,8,8,8,8,8,8,
	8,8,8,8,8,8,8,8,
	8,8,8,8,8,8,8,7,
	7,7,7,7,7,7,7,7,
	7,7,7,7,7,7,6,6,
	6,6,6,6,6,6,6,6,
	6,5,5,5,5,5,5,5,
	5,5,4,4,4,4,4,4,
	4,4,4,3,3,3,3,3,
	3,3,2,2,2,2,2,2,
	2,2,1,1,1,1,1,1,
	1,0,0,0,0,-0,-0,-0,
	-1,-1,-1,-1,-1,-1,-1,-2,
	-2,-2,-2,-2,-2,-2,-2,-3,
	-3,-3,-3,-3,-3,-3,-4,-4,
	-4,-4,-4,-4,-4,-4,-4,-5,
	-5,-5,-5,-5,-5,-5,-5,-5,
	-6,-6,-6,-6,-6,-6,-6,-6,
	-6,-6,-6,-7,-7,-7,-7,-7,
	-7,-7,-7,-7,-7,-7,-7,-7,
	-7,-7,-8,-8,-8,-8,-8,-8,
	-8,-8,-8,-8,-8,-8,-8,-8,
	-8,-8,-8,-8,-8,-8,-8,-8,
	-8,-8,-8,-8,-8,-8,-8,-8,
	-8,-8,-8,-8,-8,-8,-8,-8,
	-8,-8,-8,-7,-7,-7,-7,-7,
	-7,-7,-7,-7,-7,-7,-7,-7,
	-7,-7,-6,-6,-6,-6,-6,-6,
	-6,-6,-6,-6,-6,-5,-5,-5,
	-5,-5,-5,-5,-5,-5,-4,-4,
	-4,-4,-4,-4,-4,-4,-4,-3,
	-3,-3,-3,-3,-3,-3,-2,-2,
	-2,-2,-2,-2,-2,-2,-1,-1,
	-1,-1,-1,-1,-1,-0,-0,-0
};

const s32 logoLetter_S[]={
	66,//total size of vertices
	2,//number of vertices used at a time
	-25,-25,10, 30,-25,10,
	-25,-25,10, -30,-20,10,
	-30,-20,10, -30,-15,10,
	-30,-15,10, -15,-10,10,
	-15,-10,10,  -40,-10,10,
	-40,-10,10, -40,0,10,
	-40,0,10, -10,0,10,
	-10,0,10, -5,-5,10,
	-5,-5,10, -5,-10,10,
	-5,-10,10, -20,-15,10,
	-20,-15,10, 0,-15,10
};

const s32 logoLetter_T[] = {
	30,
	2,
	-0,-15,10, -0,0,10,
	-0,0,10, 10,0,10,
	10,0,10, 10,-15,10,
	10,-15,10, 30,-15,10,
	30,-15,10, 30,-25,10
};

const s32 logoLetter_A[] = {
	66,
	2,
	-35,0,10, -25,-25,10,
	-25,-25,10, -15,-25,10,
	-15,-25,10, 0,0,10,
	0,0,10, -15,0,10,
	-15,0,10, -15,-5,10,
	-15,-5,10, -25,-5,10,
	-25,-5,10, -25,0,10,
	-25,0,10, -35,0,10,
	-18,-10,10, -22,-10,10,
	-22,-10,10, -20,-15,10,
	-20,-15,10, -18,-10,10
};

const s32 logoLetter_R[] = {
	96,
	2,
	0,0,10, -20,0,10,
	-20,0,10, -30,-10,10,
	-30,-10,10, -30,0,10,
	-30,0,10, -40,0,10,
	-40,0,10, -40,-25,10,
	-40,-25,10, -20,-25,10,
	-20,-25,10, -15,-20,10,
	-15,-20,10, -15,-15,10,
	-15,-15,10, -20,-10,10,
	-20,-10,10, 0,-10,10,
	0,-10,10, 0,0,10,
	-30,-16,10, -30,-18,10,
	-30,-18,10, -25,-18,10,
	-25,-18,10, -23,-17,10,
	-23,-17,10, -25,-16,10,
	-25,-16,10, -30,-16,10
};

const s32 logoLetter_W[] = {
	78,
	2,
	0,-25,10, -10,-25,10,
	-10,-25,10, -13,-15,10,
	-14,-15,10, -17,-25,10,
	-17,-25,10, -27,-25,10,
	-27,-25,10, -30,-15,10,
	-31,-15,10, -34,-25,10,
	-34,-25,10, -44,-25,10,
	
	-44,-25,10, -38,0,10,
	-38,0,10, -28,0,10,
	-28,0,10, -22,-10,10,
	-22,-10,10, -16,0,10,
	-16,0,10, -6,0,10,
	-6,0,10, 0,-25,10
};

const s32 logoLetter_R2[] = {
	90,
	2,
	0,0,10, -20,0,10,
	-20,0,10, -30,-10,10,
	-30,-10,10, -30,0,10,
	-30,0,10, -40,0,10,
	-40,0,10, -40,-25,10,
	-40,-25,10, -20,-25,10,
	-20,-25,10, -15,-20,10,
	-15,-20,10, -15,-15,10,
	-15,-15,10, -20,-10,10,
	-20,-10,10, 0,-10,10,
	-30,-16,10, -30,-18,10,
	-30,-18,10, -25,-18,10,
	-25,-18,10, -23,-17,10,
	-23,-17,10, -25,-16,10,
	-25,-16,10, -30,-16,10
};

const s32 logoLetter_S2[]={
	66,//total size of vertices
	2,//number of vertices used at a time
	-25,-25,10, 0,-25,10,
	-25,-25,10, -30,-20,10,
	-30,-20,10, -30,-15,10,
	-30,-15,10, -15,-10,10,
	-15,-10,10,  -40,-10,10,
	-40,0,10, -10,0,10,
	-10,0,10, -5,-5,10,
	-5,-5,10, -5,-10,10,
	-5,-10,10, -20,-15,10,
	-20,-15,10, 0,-15,10,
	0,-15,10, 0,-25,10
};

const s32 tieFighter[]={
	60,//total size of vertices
	4,//number of vertices used at a time
	-20,0,-20, -20,0,20, 20,0,20, 20,0,-20,
	-20,0,-20, 0,-20,-20, 0,-20,20, -20,0,20,
	0,-20,-20, 0,-20,20, 20,0,20, 20,0,-20,
	-20,0,-20, 0,20,-20, 0,20,20, -20,0,20,
	0,20,-20, 0,20,20, 20,0,20, 20,0,-20
};

const s32 tieFighterWings[]={
	36,//total size
	6,//number of vertices
	-50,50,-40, -50,50,40, -50,0,50, -50,-50,40, -50,-50,-40, -50,0,-50,
	50,50,-40, 50,50,40, 50,0,50, 50,-50,40, 50,-50,-40, 50,0,-50
};

const s32 deathStarWalls[]={
	144,//total size
	2,//number of vertices
	//top of wall
	-600,-600,1, -600,-600,500,
	-600,-600,500, -600,-600,1000,
	-600,-600,1000, -600,-600,1500,
	-600,-600,1500, -600,-600,2000,
	-600,-600,2000, -600,-600,2500,
	-600,-600,2500, -600,-600,3000,
	//bottom of wall
	-600,200,1, -600,200,500,
	-600,200,500, -600,200,1000,
	-600,200,1000, -600,200,1500,
	-600,200,1500, -600,200,2000,
	-600,200,2000, -600,200,2500,
	-600,200,2500, -600,200,3000,
	
	//top of wall
	600,-600,1, 600,-600,500,
	600,-600,500, 600,-600,1000,
	600,-600,1000, 600,-600,1500,
	600,-600,1500, 600,-600,2000,
	600,-600,2000, 600,-600,2500,
	600,-600,2500, 600,-600,3000,
	//bottom of wall
	600,200,1, 600,200,500,
	600,200,500, 600,200,1000,
	600,200,1000, 600,200,1500,
	600,200,1500, 600,200,2000,
	600,200,2000, 600,200,2500,
	600,200,2500, 600,200,3000,
};

const s32 wallEffects[]={
	18,
	2,
	-600,-600,0, -600,200,0,
	-600,200,0, 600,200,0,
	600,-600,0, 600,200,0
};

const s32 crossHairs[]={
	36,
	2,
	-15,-5,10, -15,5,10,
	-15,5,10, -2,0,10,
	-2,0,10, -15,-5,10,
	
	15,-5,10, 15,5,10,
	15,5,10, 2,0,10,
	2,0,10, 15,-5,10
};

const s32 lasers[]={
	24,
	2,
	-20,-20,10, -20,-20,30,
	-20,20,10, -20,20,30,
	20,-20,10, 20,-20,30,
	20,20,10, 20,20,30
};

#define TOTAL_ENEMY_POSITIONS 64
const s32 tieFighterPositions[TOTAL_ENEMY_POSITIONS*3]={
	-400,100,1300,-400,100,900,-400,100,500,-400,100,100,
	-400,-100,1300,-400,-100,900,-400,-100,500,-400,-100,100,
	-400,-300,1300,-400,-300,900,-400,-300,500,-400,-300,100,
	-400,-500,1300,-400,-500,900,-400,-500,500,-400,-500,100,
	-200,100,1300,-200,100,900,-200,100,500,-200,100,100,
	-200,-100,1300,-200,-100,900,-200,-100,500,-200,-100,100,
	-200,-300,1300,-200,-300,900,-200,-300,500,-200,-300,100,
	-200,-500,1300,-200,-500,900,-200,-500,500,-200,-500,100,
	0,100,1300,0,100,900,0,100,500,0,100,100,
	0,-100,1300,0,-100,900,0,-100,500,0,-100,100,
	0,-300,1300,0,-300,900,0,-300,500,0,-300,100,
	0,-500,1300,0,-500,900,0,-500,500,0,-500,100,
	200,100,1300,200,100,900,200,100,500,200,100,100,
	200,-100,1300,200,-100,900,200,-100,500,200,-100,100,
	200,-300,1300,200,-300,900,200,-300,500,200,-300,100,
	200,-500,1300,200,-500,900,200,-500,500,200,-500,100
};
#endif
